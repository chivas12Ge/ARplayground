{"ast":null,"code":"import * as THREE from \"three\";\nclass XRController extends THREE.Group {\n  constructor(index, gl) {\n    super();\n    this.index = index;\n    this.controller = gl.xr.getController(index);\n    this.grip = gl.xr.getControllerGrip(index);\n    this.hand = gl.xr.getHand(index);\n    this.grip.userData.name = \"grip\";\n    this.controller.userData.name = \"controller\";\n    this.hand.userData.name = \"hand\";\n    this.visible = false;\n    this.add(this.controller, this.grip, this.hand);\n    this._onConnected = this._onConnected.bind(this);\n    this._onDisconnected = this._onDisconnected.bind(this);\n    this.controller.addEventListener(\"connected\", this._onConnected);\n    this.controller.addEventListener(\"disconnected\", this._onDisconnected);\n  }\n  _onConnected(event) {\n    if (event.fake) return;\n    this.visible = true;\n    this.inputSource = event.data;\n    this.dispatchEvent(event);\n  }\n  _onDisconnected(event) {\n    if (event.fake) return;\n    this.visible = false;\n    this.dispatchEvent(event);\n  }\n  dispose() {\n    this.controller.removeEventListener(\"connected\", this._onConnected);\n    this.controller.removeEventListener(\"disconnected\", this._onDisconnected);\n  }\n}\nexport { XRController };","map":{"version":3,"names":["XRController","THREE","Group","constructor","index","gl","controller","xr","getController","grip","getControllerGrip","hand","getHand","userData","name","visible","add","_onConnected","bind","_onDisconnected","addEventListener","event","fake","inputSource","data","dispatchEvent","dispose","removeEventListener"],"sources":["/Users/gegao/Desktop/ardemo/node_modules/@react-three/xr/src/XRController.tsx"],"sourcesContent":["import * as THREE from 'three'\nimport { XRControllerEvent } from './XREvents'\n\nexport class XRController extends THREE.Group {\n  readonly index: number\n  readonly controller: THREE.XRTargetRaySpace\n  readonly grip: THREE.XRGripSpace\n  readonly hand: THREE.XRHandSpace\n  public inputSource!: XRInputSource\n\n  constructor(index: number, gl: THREE.WebGLRenderer) {\n    super()\n\n    this.index = index\n    this.controller = gl.xr.getController(index)\n    this.grip = gl.xr.getControllerGrip(index)\n    this.hand = gl.xr.getHand(index)\n\n    this.grip.userData.name = 'grip'\n    this.controller.userData.name = 'controller'\n    this.hand.userData.name = 'hand'\n\n    this.visible = false\n    this.add(this.controller, this.grip, this.hand)\n\n    this._onConnected = this._onConnected.bind(this)\n    this._onDisconnected = this._onDisconnected.bind(this)\n\n    this.controller.addEventListener('connected', this._onConnected)\n    this.controller.addEventListener('disconnected', this._onDisconnected)\n  }\n\n  private _onConnected(event: XRControllerEvent) {\n    if (event.fake) return\n\n    this.visible = true\n    this.inputSource = event.data!\n    this.dispatchEvent(event)\n  }\n\n  private _onDisconnected(event: XRControllerEvent) {\n    if (event.fake) return\n\n    this.visible = false\n    this.dispatchEvent(event)\n  }\n\n  dispose() {\n    this.controller.removeEventListener('connected', this._onConnected)\n    this.controller.removeEventListener('disconnected', this._onDisconnected)\n  }\n}\n"],"mappings":";AAGa,MAAAA,YAAA,SAAqBC,KAAA,CAAMC,KAAA,CAAM;EAO5CC,YAAYC,KAAA,EAAeC,EAAA,EAAyB;IAC5C;IAEN,KAAKD,KAAA,GAAQA,KAAA;IACb,KAAKE,UAAA,GAAaD,EAAA,CAAGE,EAAA,CAAGC,aAAA,CAAcJ,KAAK;IAC3C,KAAKK,IAAA,GAAOJ,EAAA,CAAGE,EAAA,CAAGG,iBAAA,CAAkBN,KAAK;IACzC,KAAKO,IAAA,GAAON,EAAA,CAAGE,EAAA,CAAGK,OAAA,CAAQR,KAAK;IAE1B,KAAAK,IAAA,CAAKI,QAAA,CAASC,IAAA,GAAO;IACrB,KAAAR,UAAA,CAAWO,QAAA,CAASC,IAAA,GAAO;IAC3B,KAAAH,IAAA,CAAKE,QAAA,CAASC,IAAA,GAAO;IAE1B,KAAKC,OAAA,GAAU;IACf,KAAKC,GAAA,CAAI,KAAKV,UAAA,EAAY,KAAKG,IAAA,EAAM,KAAKE,IAAI;IAE9C,KAAKM,YAAA,GAAe,KAAKA,YAAA,CAAaC,IAAA,CAAK,IAAI;IAC/C,KAAKC,eAAA,GAAkB,KAAKA,eAAA,CAAgBD,IAAA,CAAK,IAAI;IAErD,KAAKZ,UAAA,CAAWc,gBAAA,CAAiB,aAAa,KAAKH,YAAY;IAC/D,KAAKX,UAAA,CAAWc,gBAAA,CAAiB,gBAAgB,KAAKD,eAAe;EACvE;EAEQF,aAAaI,KAAA,EAA0B;IAC7C,IAAIA,KAAA,CAAMC,IAAA,EAAM;IAEhB,KAAKP,OAAA,GAAU;IACf,KAAKQ,WAAA,GAAcF,KAAA,CAAMG,IAAA;IACzB,KAAKC,aAAA,CAAcJ,KAAK;EAC1B;EAEQF,gBAAgBE,KAAA,EAA0B;IAChD,IAAIA,KAAA,CAAMC,IAAA,EAAM;IAEhB,KAAKP,OAAA,GAAU;IACf,KAAKU,aAAA,CAAcJ,KAAK;EAC1B;EAEAK,QAAA,EAAU;IACR,KAAKpB,UAAA,CAAWqB,mBAAA,CAAoB,aAAa,KAAKV,YAAY;IAClE,KAAKX,UAAA,CAAWqB,mBAAA,CAAoB,gBAAgB,KAAKR,eAAe;EAC1E;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}