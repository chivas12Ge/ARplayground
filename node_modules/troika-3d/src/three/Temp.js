import { Object3D } from 'three'
import World3DFacade from '../facade/World3DFacade.js'

function trackSceneInsertion(obj) {
  let scene = null

  function onAdded(e) {
    for (let node = this; node;) {
      if (node.isScene) {
        scene = node
      }
      if (node !== this)
      node.addEventListener('added', onAdded)
      node.addEventListener('removed', onRemoved)
      // We need to grab a reference to the parent for use in the 'removed' listener,
      // since .parent will have already been cleared when that event fires:
      node._$parent = node.parent
    }
  }

  function onRemoved(e) {
    scene = null
    // Remove listeners and references from the severed ancestors
    for (let node = this; node;) {
      if (node !== this) {
        node.removeEventListener('added', onAdded)
        node.removeEventListener('removed', onRemoved)
      }
      const parent = node._$parent
      delete node._$parent
      node = parent
    }
  }

  obj.addEventListener('added', onAdded)
  obj.addEventListener('removed', onRemoved)
}


class TroikaSubtree extends Object3D {
  constructor () {
    super()
    trackSceneInsertion(this)
    this._world = new SubtreeWorldFacade(this)
  }

  update(props) {

  }
}


class TroikaSubtreeFacade extends World3DFacade {
  constructor (threeObject) {
    super(null)
  }
}

